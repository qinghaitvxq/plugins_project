(function(){
    /*
    * This is a small model of a unix directory. We map the file id to the
    * file itself.
    *
    * Usually, you have stored the tree model on the server and you would
    * use an API to fetch the nodes, children, parents, ...
    */
    var NODE_MODEL = {
        "0":{
            "id":0,
            "name":"~/benedikt",
            "parent_id":null
        },
        "1":{
            "id":1,
            "name":"development",
            "parent_id":0
        },
        "2":{
            "id":2,
            "name":"js-TreeView",
            "parent_id":1
        },
        "3":{
            "id":3,
            "name":"demo",
            "parent_id":2
        },
        "4":{
            "id":4,
            "name":"documents",
            "parent_id":0
        },
        "5":{
            "id":5,
            "name":"presentations",
            "parent_id":4
        },
        "6":{
            "id":6,
            "name":"university",
            "parent_id":4
        },
        "7":{
            "id":7,
            "name":"work",
            "parent_id":4
        },
        "8":{
            "id":8,
            "name":"music",
            "parent_id":0
        },
        "9":{
            "id":9,
            "name":"classic",
            "parent_id":8
        },
        "10":{
            "id":10,
            "name":"movie scores",
            "parent_id":8
        },
        "11":{
            "id":11,
            "name":"pop",
            "parent_id":8
        },
        "12":{
            "id":12,
            "name":"rock",
            "parent_id":8
        },
        "13":{
            "id":13,
            "name":"pictures",
            "parent_id":0
        },
        "14":{
            "id":14,
            "name":"videos",
            "parent_id":0
        }
    };


    // Model functions
    // ---------------

    /*
    * In a production environment, you would probably already have those
    * functions defined in your javascript API client.
    */


    /*
    * Returns the id of the *node*.
    */
    var node_id = function(node){
        return node.id;
    };


    /*
    * Returns the root node of our tree.
    */
    var root_node = function(){
        var node = NODE_MODEL["0"];
        return jQuery.Deferred().resolve(node);
    };


    /*
    * Returns an array with all children of the node with the id *parent_id*.
    */
    var child_nodes = function(parent_id){
        var children = [];

        for(var node_id in NODE_MODEL){
            var node = NODE_MODEL[node_id];
            if(node.parent_id == parent_id){
                children.push(node);
            }
        }

        return jQuery.Deferred().resolve(children);
    };


    /*
    * This method returns also the children, but with a short delay.
    * This function is only used to demonstrate the *node-loading* class.
    */
    var child_nodes_delayed = function(parent_id){
        var def = jQuery.Deferred();

        window.setTimeout(function(){
            child_nodes(parent_id).done(function(children){
                def.resolve(children);
            }).fail(function(){
                def.reject("failed to fetch child nodes");
            });
        }, 250);

        return def;
    };


    /*
    * Returns the parent of the node with the id *node_id*.
    */
    var parent_node = function(node_id){
        var node = NODE_MODEL[node_id];
        var parent = NODE_MODEL[node.parent_id] || null;
        return jQuery.Deferred().resolve(parent);
    };


    // View functions
    // --------------


    /*
    * Returns html which displays the content of the node.
    */
    var render_node = (function(){
        var template = null;

        return function(node_id, node){
            if(template == null){
                var template_raw = jQuery("#node-template").html();
                template = doT.template(template_raw);
            }
            return template({node_id: node_id, node: node});
        };
    })();


    // Initialise
    // ----------

    /*
    * Initialise the widget, as soon as the document is ready.
    */
    jQuery(document).ready(function(){
        jQuery("#my-tree-view").treeView("init", {
            node_id: node_id,
            root_node: root_node,
            child_nodes: child_nodes,
            parent_node: parent_node,
            render_node: render_node
        }).treeView("select", 2);
    });
})();
